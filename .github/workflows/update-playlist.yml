name: Shuffle Playlist

on:
  push:
    branches:
      - main

jobs:
  shuffle-playlist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Select shuffle method based on day of the week
        id: select_shuffle
        run: |
          day_of_week=$(TZ="Asia/Kolkata" date +'%u')  # Get the day of the week in India time (1 to 7, Monday to Sunday)
          case $day_of_week in
            1) echo "shuffle_method=reverseShuffle" >> $GITHUB_ENV;;  # Monday
            2) echo "shuffle_method=overhandShuffle" >> $GITHUB_ENV;;  # Tuesday
            3) echo "shuffle_method=riffleShuffle" >> $GITHUB_ENV;;  # Wednesday
            4) echo "shuffle_method=pileShuffle" >> $GITHUB_ENV;;  # Thursday
            5) echo "shuffle_method=hinduShuffle" >> $GITHUB_ENV;;  # Friday
            6) echo "shuffle_method=mongeanShuffle" >> $GITHUB_ENV;;  # Saturday
            7) echo "shuffle_method=faroShuffle" >> $GITHUB_ENV;;  # Sunday
          esac

      - name: Shuffle playlist
        run: |
          node << 'EOF'
          const fs = require("fs");
          const path = "./playlist.json";
          const shuffleMethod = process.env.shuffle_method;

          function reverseShuffle(playlist) {
            return playlist.reverse();
          }

          function overhandShuffle(playlist) {
            let shuffled = [];
            while (playlist.length) {
              const cut = Math.floor(Math.random() * playlist.length) + 1;
              shuffled = [...playlist.splice(0, cut), ...shuffled];
            }
            return shuffled;
          }

          function riffleShuffle(playlist) {
            const cut = Math.floor(playlist.length / 2);
            const left = playlist.splice(0, cut);
            const right = playlist;
            const shuffled = [];
            while (left.length || right.length) {
              if (left.length) shuffled.push(left.shift());
              if (right.length) shuffled.push(right.shift());
            }
            return shuffled;
          }

          function pileShuffle(playlist) {
            const piles = Array.from({ length: Math.floor(Math.random() * 9) + 2 }, () => []);
            while (playlist.length) {
              for (const pile of piles) {
                if (!playlist.length) break;
                pile.push(playlist.shift());
              }
            }
            return piles.flat();
          }

          function hinduShuffle(playlist) {
            const shuffled = [];
            while (playlist.length) {
              const randIndex = Math.floor(Math.random() * playlist.length);
              shuffled.push(playlist.splice(randIndex, 1)[0]);
            }
            return shuffled;
          }

          function mongeanShuffle(playlist) {
            const shuffled = [];
            playlist.forEach((item, index) => {
              index % 2 === 0 ? shuffled.push(item) : shuffled.unshift(item);
            });
            return shuffled;
          }

          function faroShuffle(playlist) {
            const half = Math.floor(playlist.length / 2);
            const left = playlist.slice(0, half);
            const right = playlist.slice(half);
            const shuffled = [];
            while (left.length || right.length) {
              if (left.length) shuffled.push(left.shift());
              if (right.length) shuffled.push(right.shift());
            }
            return shuffled;
          }

          const shuffleMethods = {
            reverseShuffle,
            overhandShuffle,
            riffleShuffle,
            pileShuffle,
            hinduShuffle,
            mongeanShuffle,
            faroShuffle,
          };

          const playlist = JSON.parse(fs.readFileSync(path, "utf-8"));
          const shuffledPlaylist = shuffleMethods[shuffleMethod](playlist);
          fs.writeFileSync(path, JSON.stringify(shuffledPlaylist, null, 4));
          EOF

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add playlist.json
          git commit -m 'Shuffle playlist'
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
