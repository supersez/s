name: Update Playlist

on:
  schedule:
    - cron: '30 18 * * *'  # Runs at 12:00 AM IST (06:30 PM UTC) every day

jobs:
  update-playlist:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Select shuffle method based on day of the week
      id: select_shuffle
      run: |
        day_of_week=$(date +'%u')  # Get the day of the week (1 to 7, Monday to Sunday)
        case $day_of_week in
          1) echo "::set-output name=shuffle_method::reverse_shuffle";;  # Monday
          2) echo "::set-output name=shuffle_method::overhand_shuffle";;  # Tuesday
          3) echo "::set-output name=shuffle_method::riffle_shuffle";;  # Wednesday
          4) echo "::set-output name=shuffle_method::pile_shuffle";;  # Thursday
          5) echo "::set-output name=shuffle_method::hindu_shuffle";;  # Friday
          6) echo "::set-output name=shuffle_method::mongean_shuffle";;  # Saturday
          7) echo "::set-output name=shuffle_method::faro_shuffle";;  # Sunday
        esac

    - name: Shuffle playlist
      if: github.run_number == 1  # Ensure shuffle is applied only once a day
      run: |
        python3 -c "
import json
import random

def reverse_shuffle(playlist):
    return playlist[::-1]

def overhand_shuffle(playlist):
    shuffled = []
    while playlist:
        cut = random.randint(1, len(playlist))
        shuffled = playlist[:cut] + shuffled
        playlist = playlist[cut:]
    return shuffled

def riffle_shuffle(playlist):
    cut = len(playlist) // 2
    left, right = playlist[:cut], playlist[cut:]
    shuffled = []
    while left or right:
        if left:
            shuffled.append(left.pop(0))
        if right:
            shuffled.append(right.pop(0))
    return shuffled

# Define other shuffle methods...

# Get the selected shuffle method from the previous step
shuffle_method = '$(echo "${{ steps.select_shuffle.outputs.shuffle_method }}")'

with open('playlist.json', 'r') as file:
    playlist = json.load(file)

# Call the selected shuffle method
shuffled_playlist = globals()[shuffle_method](playlist)

with open('playlist.json', 'w') as file:
    json.dump(shuffled_playlist, file, indent=4)
        "

    - name: Commit and push changes
      if: github.run_number == 1  # Ensure shuffle is applied only once a day
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add playlist.json
        git commit -m 'Shuffle playlist'
        git push
